import{D as s,c as n,I as e,k as t,a2 as r,j as i,a as h,o as c}from"./chunks/framework.CPu_Kgir.js";const d="/images/metaphorest-logo.png",p="/assets/no-cripsr-tomato.C2s-Ky29.jpg",u="/assets/example-edit.DuW4T6XE.jpeg",o="/assets/example-edit.BTxKUo0r.jpeg",k="/assets/example-edit.4Z3QFO8t.jpeg",m=r('<h1 id="text" tabindex="-1">Text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;Text&quot;">​</a></h1><h1 id="h1" tabindex="-1">H1 <a class="header-anchor" href="#h1" aria-label="Permalink to &quot;H1&quot;">​</a></h1><h2 id="h2" tabindex="-1">H2 <a class="header-anchor" href="#h2" aria-label="Permalink to &quot;H2&quot;">​</a></h2><h3 id="h3" tabindex="-1">H3 <a class="header-anchor" href="#h3" aria-label="Permalink to &quot;H3&quot;">​</a></h3><h4 id="h4" tabindex="-1">H4 <a class="header-anchor" href="#h4" aria-label="Permalink to &quot;H4&quot;">​</a></h4><h5 id="h5" tabindex="-1">H5 <a class="header-anchor" href="#h5" aria-label="Permalink to &quot;H5&quot;">​</a></h5><h6 id="h6" tabindex="-1">H6 <a class="header-anchor" href="#h6" aria-label="Permalink to &quot;H6&quot;">​</a></h6><p><em>italic</em>, <strong>bold</strong>, <em><strong>bolditalic</strong></em></p><blockquote><p>Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote Blockquote</p></blockquote><h3 id="list" tabindex="-1">List <a class="header-anchor" href="#list" aria-label="Permalink to &quot;List&quot;">​</a></h3><ul><li>List Item</li><li>List Item</li><li>List Item</li><li>List Item</li></ul><h3 id="numbered-list" tabindex="-1">Numbered List <a class="header-anchor" href="#numbered-list" aria-label="Permalink to &quot;Numbered List&quot;">​</a></h3><ol><li>Numbered List Item</li><li>Numbered List Item</li><li>Numbered List Item</li><li>Numbered List Item</li></ol><h3 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">​</a></h3><ul><li><a href="http://metaphorest.org" target="_blank" rel="noreferrer">http://metaphorest.org</a></li><li><a href="http://metaphorest.org" target="_blank" rel="noreferrer">metaPhorest</a></li></ul><h3 id="code-block" tabindex="-1">Code Block <a class="header-anchor" href="#code-block" aria-label="Permalink to &quot;Code Block&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span></code></pre></div><h3 id="inline-code" tabindex="-1">Inline Code <a class="header-anchor" href="#inline-code" aria-label="Permalink to &quot;Inline Code&quot;">​</a></h3><p>In the above block <code>let a = 1</code> defines variable <code>a</code></p><h1 id="images" tabindex="-1">Images <a class="header-anchor" href="#images" aria-label="Permalink to &quot;Images&quot;">​</a></h1><hr><h3 id="absolute-images-from-public" tabindex="-1">Absolute Images from <code>/public/</code> <a class="header-anchor" href="#absolute-images-from-public" aria-label="Permalink to &quot;Absolute Images from `/public/`&quot;">​</a></h3><p><code>![](/images/metaphorest-logo.png)</code><img src="'+d+'" alt=""></p><hr><h3 id="relative-images" tabindex="-1">Relative Images <a class="header-anchor" href="#relative-images" aria-label="Permalink to &quot;Relative Images&quot;">​</a></h3><p><code>![](no-cripsr-tomato.jpg)</code><img src="'+p+`" alt=""></p><h3 id="figure-component" tabindex="-1">Figure Component <a class="header-anchor" href="#figure-component" aria-label="Permalink to &quot;Figure Component&quot;">​</a></h3><p>Image can be transformed (scaled) during compile-time, they will not show up in dev, only on compiled site:</p><p><code>&lt;Figure :src=&quot;image1_url&quot; width=&quot;200&quot; alt=&quot;Image Alt&quot; caption=&quot;Image Caption&quot; /&gt;</code></p><p><code>image1</code> needs to be imported with JS:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import image1_url from &#39;./example-edit.jpg?w=200&#39;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><code>w=200</code> means: scale to 200px width</p>`,32),g=i("p",null,"The Figure Component is most useful, where different sizes of the same image is needed.",-1),b=i("h1",{id:"event-component",tabindex:"-1"},[h("Event Component "),i("a",{class:"header-anchor",href:"#event-component","aria-label":'Permalink to "Event Component"'},"​")],-1),B=JSON.parse('{"title":"Text","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"test/index.md","filePath":"test/index.md","lastUpdated":1726731244000}'),q={name:"test/index.md"},v=Object.assign(q,{setup(E){return(_,f)=>{const a=s("Figure"),l=s("Event");return c(),n("div",null,[m,e(a,{src:t(u),width:"200",alt:"Image Alt",caption:"Image, 200px"},null,8,["src"]),g,e(a,{src:t(o),width:"400",alt:"Image Alt",caption:"Image, 400px"},null,8,["src"]),e(a,{src:t(k),width:"100",alt:"Image Alt",caption:"Image, 100px"},null,8,["src"]),e(a,{src:t(o),width:"100%",alt:"Image Alt",caption:"Image, 100px, 100%"},null,8,["src"]),b,e(l,{title:"999th metaPhorest Seminar",presenter:"Name Name",href:"/event-1"})])}}});export{B as __pageData,v as default};
